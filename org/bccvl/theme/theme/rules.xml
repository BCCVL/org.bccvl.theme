<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- view the unthemed page when using 127.0.0.1 as host header -->
    <notheme if="$host='127.0.0.1'" />
    <!-- don't theme ajax calls (Plone overlays) -->
    <notheme if="$ajax_load" />

    <!-- <notheme if="'true'='true'" /> -->


    <!-- UNIVERSAL RULES ============================================ -->

    <!-- inject manifest js config ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <after css:theme-children="#js-config">
        window.bccvl || (window.bccvl = {});
        window.bccvl.config || (window.bccvl.config = {});
        window.bccvl.config.visualiser = {
            baseUrl: '<xsl:value-of select="$visualiser_base_url" />',
        };
    </after>

    <!-- update links ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <!--
    This section replaces the href attribute of the theme links with
    the actual content links.

    We use css-selectors to look up the anchors (links) in the theme.
    Specifically, we're using css classes to classify where an anchor should
    link to link.

    We use XPATH to lookup the desired anchor in Plone's content page.

    We use Diazo's merge function to merge href attribute in the content with
    the href attribute in the template. For this reason, the href attribute
    in the template should always be undefined, i.e. no href attribute should
    be defined.
    -->

    <!-- portaltab (high level grouping) -->
    <merge attributes="href" css:theme="a.bccvllinks-home"              content="//li[@id='portaltab-index_html']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-news"              content="//li[@id='portaltab-news']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-events"            content="//li[@id='portaltab-events']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-users"             content="//li[@id='portaltab-Members']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-datasets"          content="//li[@id='portaltab-datasets']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-functions"         content="//li[@id='portaltab-functions']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-knowledgebase"     content="//li[@id='portaltab-knowledgebase']/a" />
    <merge attributes="href" css:theme="a.bccvllinks-experiments"       content="//li[@id='portaltab-experiments']/a" />

    <!-- contentview (content level grouping) -->
    <!-- experiment -->
    <merge attributes="href" css:theme="a.bccvllinks-experiment-view"   content="//li[@id='contentview-view']/a" />

    <!--
        Link to create a new experiment:
        //a[@id="org-bccvl-content-experiment"]

        Note: This link is NOT available when viewing a specific experiment.
    -->
    <merge attributes="href" css:theme="a.bccvllinks-experiment-new"    content="//a[@id='org-bccvl-content-experiment']" />

    <!-- miscellaneous -->

    <!--
        Get the list of experiments

        Path to ul that contains the list of experiments:

            div.portletWrapper > dl.portletNavigationTree > dd.portletItem > ul

        The experiment anchor within the ul:

            div.portletWrapper > dl.portletNavigationTree > dd.portletItem > ul > li > a

            <a href="https://192.168.100.100/_debug/bccvl/experiments/my-exp" class="state-private navTreeFolderish contenttype-org-bccvl-content-experiment" title="this is my">
                <span>My exp</span>
            </a>

        The anchor has the Experiment description as its 'title'.
        The anchor has the Experiment name as a span inside the a.
    -->
    <after css:theme-children="section.bccvl-experimentlist table.bccvl-experimenttable > tbody">
        <xsl:for-each css:select="div.portletWrapper > dl.portletNavigationTree > dd.portletItem > ul > li > a">
            <tr>
                <td class="broken">28 Aug 2013</td>
                <td class="bccvl-table-label">
                    <h1><xsl:copy-of select="string(@title)" /></h1>
                    <p><xsl:copy-of select="span/text()" /></p>
                </td>
                <td class="bccvl-table-controls">
                    <xsl:element name="a">
                        <xsl:attribute name="href"><xsl:value-of select="string(@href)" /></xsl:attribute>
                        <i class="icon-chevron-right"></i>
                    </xsl:element>
                </td>
            </tr>
        </xsl:for-each>
    </after>


    <!-- NEW SDM EXPERIMENT ========================================= -->
    <rules if-path="++add++org.bccvl.content.experiment/">
        <theme href="html/new-experiment-sdm.html" />

        <!-- place-holder ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    </rules>

    <!-- EXPERIMENT LIST ============================================ -->
    <rules if-path="experiments/">
        <theme href="html/experiment-list.html" />

        <!-- place-holder ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    </rules>

    <!-- EXPERIMENT RESULTS ========================================= -->
    <rules css:if-content="#bccvl-experiment-view">
        <theme href="html/experiment-results.html" />

        <!-- place-holder ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    </rules>

</rules>
