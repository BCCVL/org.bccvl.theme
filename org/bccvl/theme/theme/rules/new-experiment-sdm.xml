<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- NEW SDM EXPERIMENT ========================================= -->
    <rules if-path="++add++org.bccvl.content.sdmexperiment/">
        <theme href="html/new-experiment-sdm.html" />

        <!-- hook in the new experiment form's attributes -->
        <copy attributes="name action enctype method" css:theme="form#experimentSetup" css:content="#form" />

        <!-- hook in the submit (save) button -->
        <copy attributes="name value" css:theme="form#experimentSetup button[type=submit]" css:content="#form-buttons-save" />

        <!-- hook in title field -->
        <copy attributes="name value" css:theme="form#experimentSetup .bccvl-expname" css:content="#form-widgets-IDublinCore-title" />

        <!-- hook in description field -->
        <replace theme-children="//textarea[@name='expDescription']" content="//textarea[@id='form-widgets-IDublinCore-description']/text()" />
        <copy attributes="name value" css:theme="form#experimentSetup .bccvl-expdesc" css:content="#form-widgets-IDublinCore-description" />

        <!-- hook in the algorithm list -->
        <before css:theme-children="section.bccvl-experimentdetails table.bccvl-algorithmtable > tbody">
            <xsl:for-each select="//input[@name='form.widgets.functions:list']">
                <tr>
                    <td class="bccvl-table-choose">
                        <xsl:element name="input">
                            <xsl:attribute name="parsley-mincheck">1</xsl:attribute>
                            <xsl:attribute name="parsley-group">algorithms</xsl:attribute>
                            <xsl:attribute name="parsley-error-message">Please select at least 1 algorithm.</xsl:attribute>
                            <xsl:attribute name="type">checkbox</xsl:attribute>
                            <xsl:attribute name="name"><xsl:value-of select="@name" /></xsl:attribute>
                            <xsl:if test="@checked">
                                <xsl:attribute name="checked">checked</xsl:attribute>
                            </xsl:if>
                            <xsl:attribute name="id"><xsl:value-of select="@id" /></xsl:attribute>
                            <xsl:attribute name="value"><xsl:value-of select="@value" /></xsl:attribute>
                            <xsl:attribute name="data-friendlyname">checkbox_algorithm_<xsl:copy-of select="string(../label/span/text())" /></xsl:attribute>
                        </xsl:element>
                    </td>
                    <td class="bccvl-table-label">
                        <xsl:element name="label">
                            <xsl:attribute name="for">
                                <xsl:value-of select="@id" />
                            </xsl:attribute>
                            <h1><xsl:copy-of select="string(../label/span/text())" /></h1>
                        </xsl:element>
                    </td>
                    <td class="bccvl-table-controls">
                        <xsl:element name="a">
                            <xsl:attribute name="target">_blank</xsl:attribute>
                            <xsl:attribute name="href">
                                <!-- grab the search root URL from the page's search box,
                                     and add the @value which is the algo's plone name. The
                                     knowledgebase can use the algo name as a tag on docs
                                     that are relevant to this algo. -->
                                <xsl:value-of select="//form[@id='searchGadget_form']/@action" />?Subject%3Alist=<xsl:value-of select="@value" />
                            </xsl:attribute>
                            <i class="icon-info-sign" title="more information"></i>
                        </xsl:element>
                    </td>
                </tr>
            </xsl:for-each>
        </before>

        <!-- loop through the algorithm configs, poking the config blocks into the accordion -->

        <replace css:theme-children="#algoConfig"
                 css:content-children="#fieldset-parameters"/>


        <!-- hook in the occurrences list -->

        <!--
            We are converting a select to a radio button input,
            so we need to give the radio button the select's name,
            not the option's name.

        -->
        <before css:theme-children="section.bccvl-experimentdetails table.bccvl-occurrencestable > tbody">
            <xsl:for-each select="//select[@id='form-widgets-species_occurrence_dataset']/option">
                <xsl:if test="@value!='--NOVALUE--'">
                    <tr>
                        <td class="bccvl-table-choose">
                            <xsl:element name="input">
                                <xsl:attribute name="type">radio</xsl:attribute>
                                <xsl:attribute name="name"><xsl:value-of select="string(../@name)" /></xsl:attribute>
                                <xsl:if test="@selected">
                                    <xsl:attribute name="checked">checked</xsl:attribute>
                                </xsl:if>
                                <xsl:attribute name="id"><xsl:value-of select="@id" /></xsl:attribute>
                                <xsl:attribute name="value"><xsl:value-of select="@value" /></xsl:attribute>
                                <xsl:attribute name="data-friendlyname">radio_occurrence_<xsl:copy-of select="text()" /></xsl:attribute>
                                <xsl:attribute name="required">required</xsl:attribute>
                                <xsl:attribute name="parsley-error-message">Please choose a set of occurrences.</xsl:attribute>
                            </xsl:element>
                        </td>
                        <td class="bccvl-table-label">
                            <xsl:element name="label">
                                <xsl:attribute name="for">
                                    <xsl:value-of select="@id" />
                                </xsl:attribute>
                                <h1><xsl:copy-of select="text()" /></h1><p class="broken">provenance and description</p>
                            </xsl:element>
                        </td>
                        <td class="bccvl-table-controls">
                            <xsl:element name="a">
                                <xsl:attribute name="class">fine bccvl-occurrence-viz</xsl:attribute>
                                <xsl:attribute name="title">preview this dataset</xsl:attribute>
                                <xsl:attribute name="data-viz-id"><xsl:value-of select="@value" /></xsl:attribute>
                                <i class="icon-eye-open icon-link"></i>
                            </xsl:element>
                            <!-- <a><i class="broken icon-cog" title="uh, dunno"></i></a> -->
                        </td>
                    </tr>
                </xsl:if>
            </xsl:for-each>
        </before>

        <after css:theme-children=".random-absences-settings" content-children="//*[@id='formfield-form-widgets-species_pseudo_absence_points']"/>
        <after css:theme-children=".random-absences-settings" content-children="//*[@id='formfield-form-widgets-species_number_pseudo_absence_points']"/>
        <!-- hook in the absences list -->
        <before css:theme-children="section.bccvl-experimentdetails table.bccvl-absencestable > tbody">
            <xsl:for-each select="//select[@id='form-widgets-species_absence_dataset']/option">
                <xsl:if test="@value!='--NOVALUE--'">
                    <tr>
                        <td class="bccvl-table-choose">
                            <xsl:element name="input">
                                <xsl:attribute name="type">radio</xsl:attribute>
                                <xsl:attribute name="name"><xsl:value-of select="string(../@name)" /></xsl:attribute>
                                <xsl:if test="@selected">
                                    <xsl:attribute name="checked">checked</xsl:attribute>
                                </xsl:if>
                                <xsl:attribute name="id"><xsl:value-of select="@id" /></xsl:attribute>
                                <xsl:attribute name="value"><xsl:value-of select="@value" /></xsl:attribute>
                                <xsl:attribute name="data-friendlyname">radio_absence_<xsl:copy-of select="text()" /></xsl:attribute>
                                <xsl:attribute name="required">required</xsl:attribute>
                                <xsl:attribute name="parsley-error-message">Please choose a set of absence points.</xsl:attribute>
                            </xsl:element>
                        </td>
                        <td class="bccvl-table-label">
                            <xsl:element name="label">
                                <xsl:attribute name="for"><xsl:value-of select="@id" /></xsl:attribute>
                                <h1><xsl:copy-of select="text()" /></h1><p class="broken">provenance and description</p>
                            </xsl:element>
                        </td>
                        <td class="bccvl-table-controls">
                            <xsl:element name="a">
                                <xsl:attribute name="class">fine bccvl-absence-viz</xsl:attribute>
                                <xsl:attribute name="title">preview this dataset</xsl:attribute>
                                <xsl:attribute name="data-viz-id"><xsl:value-of select="@value" /></xsl:attribute>
                                <i class="icon-eye-open icon-link"></i>
                            </xsl:element>
                            <!-- <a><i class="broken icon-cog" title="uh, dunno"></i></a> -->
                        </td>
                    </tr>
                </xsl:if>
            </xsl:for-each>
        </before>

        <before css:theme="section.bccvl-experimentdetails table.bccvl-environmentaldatatable" css:content="#formfield-form-widgets-resolution"/>
        <!-- The rest of this is filled in with AJAX -->
        <replace css:theme="section.bccvl-experimentdetails table.bccvl-environmentaldatatable" content="//table[@id='form-widgets-environmental_datasets']" />

    </rules>

</rules>
