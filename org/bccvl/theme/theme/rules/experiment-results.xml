<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- EXPERIMENT RESULTS ========================================= -->
    <rules css:if-content="#bccvl-experiment-view">
        <theme href="html/experiment-results.html" />

        <!-- get the experiment name for the breadcrumb trail from plone's breadcrumb trail -->
        <replace
            css:theme-children=".bccvl-breadcrumb .bccvllinks-experiment-view"
            css:content-children="#breadcrumbs-current"
        />

        <!-- update the job status -->

        <!--
            known possible statuses: Pending, Active, Performing Callbacks, Completed.

            template supported statuses: Active, Completed we'll use the template for
            all unknown statuses
        -->

        <!-- new plan: chuck everything and build a status block -->
        <drop css:theme=".bccvl-status-block" />

        <before css:theme-children=".bccvl-experimentresults">
            <xsl:choose>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Failed')">
                    <div class="row-fluid bccvl-status-block bccvl-status-error">
                        <div class="span12 bccvl-expstatus alert alert-block alert-error">
                            <p class="lead">this Experiment stopped with an <strong>error</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'New')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>queued</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Queued')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>queued</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Retrieving')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>retrieving data</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Transfering')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>transferring data</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Transferring')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>transferring data</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Running')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>running</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Cleanup')">
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment is <strong>performing cleanup</strong></p>
                        </div>
                    </div>
                </xsl:when>

                <xsl:when test="contains(//span[@id='form-widgets-IJobStatus-status']/text(),'Completed')">
                    <div class="row-fluid bccvl-status-block bccvl-status-complete">
                        <div class="span12 bccvl-expstatus alert alert-success">
                            <p>
                                This Experiment is <strong>complete</strong>. The results are available below.
                            </p>
                        </div>

                        <!--
                        <div class="row-fluid bccvl-buttonbar">
                            <div class="span3">
                                <div class="btn-group btn-block">
                                    <a class="btn dropdown-toggle btn-block btn-danger" data-toggle="dropdown">
                                        <strong>delete</strong> this Experiment
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li class="bccvl-dropdownlabel disabled">really delete this Experiment and its results forever?</li>
                                        <li><a class="text-error"><i class="icon-remove"></i> yes, delete it</a></li>
                                        <li><a class="sampledata"><i class="icon-arrow-left"></i> no, on second thoughts leave it</a></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="span3"><button class="broken btn btn-block"><strong>discard</strong> these results</button></div>
                            <div class="span3"><button class="broken btn btn-block"><strong>download</strong> these results</button></div>
                            <div class="span3"><button class="broken btn btn-block"><strong>copy</strong> this Experiment</button></div>
                        </div>
                        -->
                    </div>
                </xsl:when>

                <xsl:otherwise>
                    <div class="row-fluid bccvl-status-block bccvl-status-running">
                        <div class="span12 bccvl-expstatus alert alert-block">
                            <p class="lead">this Experiment's reported status is <strong><xsl:value-of select="//span[@id='form-widgets-IJobStatus-status']/text()" /></strong></p>
                        </div>
                    </div>
                </xsl:otherwise>

            </xsl:choose>
        </before>

        <!-- get the results -->
        <before css:theme-children=".bccvl-experimentresults table tbody">
            <!--
            <xsl:for-each select="//*[@id='bccvl-experimentresults']//li//a">
                <tr>
                    <td colpan="2" class="bccvl-table-label">
                        <h1><xsl:copy-of select="text()" /></h1>
                        <p class="broken">(provenance &amp; description)</p>
                    </td>
                    <td class="bccvl-table-controls">
                        <xsl:element name="a">
                            <xsl:attribute name="class">bccvl-auto-viz</xsl:attribute>
                            <xsl:attribute name="title">preview this dataset</xsl:attribute>
                            <xsl:attribute name="data-viz-id"><xsl:value-of select="@href" />/++widget++form.widgets.file/@@download/<xsl:copy-of select="text()" /></xsl:attribute>
                            <i class="icon-eye-open"></i>
                        </xsl:element>
                    </td>
                </tr>
            </xsl:for-each>
            -->
            <xsl:for-each select="//*[@class='bccvl-experiment-result-set']">
                <tr class="info"><td colspan="3"><xsl:value-of select="h3/a/text()" /></td></tr>
                <xsl:for-each select="ul//li//a">
                    <tr>
                        <td colpan="2" class="bccvl-table-label">
                            <h1><xsl:copy-of select="text()" /></h1>
                        </td>
                        <td class="bccvl-table-controls">
                            <xsl:element name="a">
                                <xsl:attribute name="title">Download this file</xsl:attribute>
                                <xsl:attribute name="href">
                                    <xsl:value-of select="@href" />/view/++widget++form.widgets.file/@@download/<xsl:copy-of select="text()" />
                                </xsl:attribute>
                                <i class="icon-download-alt icon-link"></i>
                            </xsl:element>
                            <xsl:element name="a">
                                <xsl:attribute name="class">bccvl-auto-viz</xsl:attribute>
                                <xsl:attribute name="title">Preview this file</xsl:attribute>
                                <xsl:attribute name="data-viz-id">
                                    <xsl:value-of select="@href" />/view/++widget++form.widgets.file/@@download/<xsl:copy-of select="text()" />
                                </xsl:attribute>
                                <i class="icon-eye-open icon-link"></i>
                            </xsl:element>
                        </td>
                    </tr>
                </xsl:for-each>
            </xsl:for-each>
        </before>


        <!-- place-holder ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    </rules>
</rules>
